# `name` value will appear "as is" in the badge.
# See https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository
name: "build"

on:
  push:
    branches:
    - master
    tags:
    - '**'
  pull_request:
    branches:
    - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install Licenser"
      env:
        LICENSER_VERSION: 0.6.0
      run: |
        mkdir -p $HOME/bin
        wget -c https://github.com/liamawhite/licenser/releases/download/v${LICENSER_VERSION}/licenser_${LICENSER_VERSION}_Linux_x86_64.tar.gz -O - | tar -xz -C $HOME/bin licenser

    - name: "Check license headers"
      run: |
        if ! $HOME/bin/licenser verify -r . ; then
          echo >&2 "There are some files without a license header. Run 'licenser apply -r \"Tetrate\"' to add it automatically."
          exit 1
        fi

    - name: "Install Rust"
      run: |
        rustup update stable
        rustup default stable
        rustc -vV

    - name: "Check code format"
      run: cargo fmt --all -- --check

    - name: "Check code mistakes"
      run: cargo clippy --all -- -Dwarnings

  build_pr: &build_pr
    name: "Build (pull request)"
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install Rust"
      # apparently, `rustup update` regularly fails on Windows with:
      #   error: could not remove 'setup' file: 'C:\Users\runneradmin\.cargo\bin/rustup-init.exe'
      #   error: caused by: Access is denied. (os error 5)
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        rustup update ${{ matrix.rust }}

    - name: "Set default Rust toolchain"
      run: |
        rustup default ${{ matrix.rust }}
        rustc -vV

    - name: "Install 'wasm32-unknown-unknown'"
      run: |
        rustup target add wasm32-unknown-unknown

    - name: "Build"
      run: cargo build:wasm --workspace --verbose
    if: ${{ github.event_name == 'pull_request' }}

  # build `master` branch on a wider co
  build_master:
    <<: *build_pr
    name: "Build (master)"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
        - os: ubuntu-latest
          rust: beta
        - os: ubuntu-latest
          rust: nightly
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

  test_pr: &test_pr
    name: "Test (pull request)"
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install Rust"
      # apparently, `rustup update` regularly fails on Windows with:
      #   error: could not remove 'setup' file: 'C:\Users\runneradmin\.cargo\bin/rustup-init.exe'
      #   error: caused by: Access is denied. (os error 5)
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        rustup update ${{ matrix.rust }}

    - name: "Set default Rust toolchain"
      run: |
        rustup default ${{ matrix.rust }}
        rustc -vV

    - name: "Test"
      run: cargo test --workspace --verbose
    if: ${{ github.event_name == 'pull_request' }}

  test_master: &test_pr
    <<: *test_pr
    name: "Test (master)"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
        - os: ubuntu-latest
          rust: beta
        - os: ubuntu-latest
          rust: nightly
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

  docs:
    name: "Docs"
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install Rust"
      run: |
        rustup update stable
        rustup default stable
        rustc -vV

    - name: "Install 'wasm32-unknown-unknown'"
      run: |
        rustup target add wasm32-unknown-unknown

    - name: "Build docs"
      run: cargo doc:wasm --workspace --no-deps

    - name: "Publish GitHub Pages"
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      run: |
        git fetch origin gh-pages                 # By default, 'actions/checkout' only fetches branch of the commit.
        git worktree add /tmp/rustdoc gh-pages    # Checkout 'gh-pages' branch into '/tmp/rustdoc'
        rm -rf /tmp/rustdoc/*                     # Remove all files (except for hidden files, such as .git directory)
        cp -rp target/wasm32-unknown-unknown/doc/* /tmp/rustdoc/
        cd /tmp/rustdoc
        git add --all                             # This adds, modifies, and removes index entries to match the working tree.
        if ! git diff --cached --quiet ; then     # There might be no changes to commit
          GIT_AUTHOR_NAME="${{ github.event.head_commit.author.name }}" \
            GIT_AUTHOR_EMAIL="${{ github.event.head_commit.author.email }}" \
            GIT_AUTHOR_DATE="${{ github.event.head_commit.timestamp }}" \
            GIT_COMMITTER_NAME="${{ github.event.head_commit.committer.name }}" \
            GIT_COMMITTER_EMAIL="${{ github.event.head_commit.committer.email }}" \
            GIT_COMMITTER_DATE="${{ github.event.head_commit.timestamp }}" \
            git commit -m "${{ github.event.head_commit.message }}"
          git push origin gh-pages
        else
          echo "There are no changes to GitHub Pages."
        fi
        git worktree remove --force /tmp/rustdoc  # Remove the working tree.
        echo "Rust Docs has been published to https://tetratelabs.github.io/envoy-wasm-rust-sdk/envoy_sdk/"

  publish:
    name: "Publish Crate"
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs:
    - lint
    - build
    - test
    - docs
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install Rust"
      run: |
        rustup update stable
        rustup default stable
        rustc -vV

    - name: "Install 'wasm32-unknown-unknown'"
      run: |
        rustup target add wasm32-unknown-unknown

    - name: "Check version"
      run: |
        version="$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[] | select(.name == "envoy-sdk") | .version')"
        tag="${GITHUB_REF##*/}"
        if [[ "$version" != "$tag" ]]; then
          echo "Package version according to Cargo.toml ($version) is different from the Git tag ($tag). Did you forget to bump the version in Cargo.toml ?"
          exit 1
        fi

    - name: "Publish Crate"
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        cd envoy-sdk && cargo publish:wasm
